# EXAMPLE MAKE.CFG FILE
# Please see the comments for each option. Most options can be left
# off for sane defaults.

#################################################################
## Default make target                                         ##
#################################################################
[DEFAULT]

## Project name (with @ symbol)
## This is used for naming the release files.
## Default: Current folder name
# project = @my_project

## Project root.
## This is the directory used as the root when building the PBO (for prefixes, etc.)
## Default: Directory containing make.py
# project_root = P:\x\my_project\

## Module root.
## This is the directory containing the folders with addon content (config.cpp, etc.)
## inside of them. It must be under the project root.
## Default: Project root
# module_root = ..\addons\

## Path to project secret key for signing
## Make sure this isn't in your public repository!
## Default: None
# key = C:\Keys\mykey.biprivatekey

## Auto-detect addons to build?
## If set to True, the make system will attempt to autodetect addons in the
## current folder by looking for directories with 'config.cpp' in them.
## It will also search in the subdirectories 'modules' and 'addons' if they 
## exist.
## Default: True
# module_autodetect = False

## List of directories to ignore when autodetecting addons.
## Paths must be relative to project_root.
## Default: None
# ignore = test

## Module list
## If autodetect is set to False, only addon folders whose names are in this
## list will be built. Paths must be relative to project_root.
## Default: None
# modules = my_module, my_supporting_module

## Directory where the built addon will be saved
## This is an absolute path.
# Default: 'release' in make.py's directory
# release_dir = P:\built_addons

## String prefixed to all build PBO file names
## Default: None
# pbo_name_prefix = myproject_

## Build tool to use
## Default: addonbuilder
# build_tool = addonbuilder

## Suppress console output from build tool
## Default: False
# quiet = True

##################################################################
## Alternate build target using a different key                 ##
##################################################################
# [DifferentKey]
# key = C:\Keys\different.biprivatekey

##################################################################
# Alternate build target ignoring some modules when detecting   ##
##################################################################
# [IgnoreSome]
# key = C:\Keys\different.biprivatekey
# ignore = release, my_server_module, my_private_module

##################################################################
## Alternate build target with fixed build list                 ##
##################################################################
# [Fixed]
# module_autodetect = False
# modules = my_module, my_other_module